
type Tree = Leaf {value:Number}
          | Node {value:Number, left:Tree, right:Tree}

trait Max where
    t-max : Max -> Number

extends Leaf with Max where

    t-max leaf = leaf.value

extends Node with Max where

    t-max node = max ml mr mn
       where ml = node.left |> t-max
             mr = node.right |> t-max
             mn = node.value

arbol = Node
    { value = 30
    , left = Leaf { value = 70 }
    , right = Node { value = 15
                   , left = Node { value = 42, left = Leaf {54}, right = Leaf{66} }
                   , right = Node { 25, Leaf {89}, Leaf {72} }
                   }
    }

t-max arbol |> println "El valor maximo del arbol  es: "

t-sum arbol |> println "La suma del arbol  es: "
