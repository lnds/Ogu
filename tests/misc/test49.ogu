trait Vehicle where

    move! : Vehicle -> Int


type Car = Car {company, model, year}
    extends Vehicle
    where
        move! this = println! "moving car " company model year

type Plane {company, series, year}
   extends Vehicle
   where
        move! this = println! "flying plane " company series year

type Ship {name}

    extends Vehicle
    wher
        move! this
            | name == "Titanic" = println! name "sink"
            | otherwise = println! "sail"

mustang56 = Car {"Ford", "Mustang", 1956}

boeing747 = Plane {"Boeing", "747", 2000}

show-model p : Plane = println! (.series  p) (.company  p)
show-model c : Car   = println! c.model c.company

dispatch show with class

def show Plane ? plane = println! "plane " -- (show-model plane)
def show Car   ? car = println!   "car " -- (show-model car)

titanic = Ship ("Titanic")

queen = Ship ("Queen Mary")

show mustang56
show boeing747

show-model mustang56
show-model boeing747

move mustang56

move boeing747

move titanic

move queen


